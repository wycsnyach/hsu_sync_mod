<?php
	session_start();

	set_time_limit(0);
	ini_set('memory_limit','1024M');
	ini_set('max_execution_time','2560000');

	date_default_timezone_set('Africa/Nairobi');
	error_reporting(0);

	$time = microtime();
	$time = explode(' ', $time);
	$time = $time[1] + $time[0];
	$start = $time;

	$init_params = $_SESSION['init_params'];

	require_once( "RestCallRequest.php");

	function return_httpstat($http_stat)
	{
		$msg = " Response message";
		switch ($http_stat){
		case 400:
		 $msg = "<h2>400 Bad Request: The request was invalid.</h4>";
		  break;
		case 401:
		  $msg =  "<h4>401 Unauthorized: API token was missing or incorrect.</h4>";
		  break;
		case 403:
		  $msg =  "<h4>403 Forbidden: You do not have permissions to use the API.</h4>";
		  break;
		case 404:
		  $msg =  "<h4>404 Not Found: The URI you requested is invalid or the resource does not exist.</h4>";
		  break;
		case 406:
		  $msg =  "<h4>406 Not Acceptable: The data being imported was formatted incorrectly.</h4>";
		  break;
		case 500:
		  $msg =  "<h4>500 Internal Server Error: The server encountered an error processing your request.</h4>";
		  break;
		case 501:
		  $msg =  "<h4>501 Not Implemented: The requested method is not implemented.</h4>";
		  break;
		default:
		 $msg =  "<h4>200 OK: Success!</h4>";
		}
		
		return($msg);
	}

	$updateType= $_SESSION['updateType'];
	$project= $_SESSION['project'];
	
	$records = array();
	$server_token = "";
	$local_token = "";

	if($project=="cin_karatina"){
		$server_token=$init_params['CIN_Karatina']['server_token'];
		$local_token=$init_params['CIN_Karatina']['local_token'];
	}else if($project=="cin_nyeri"){
		$server_token=$init_params['CIN_Nyeri']['server_token'];
		$local_token=$init_params['CIN_Nyeri']['local_token'];
	}else if($project=="cin_mlk"){
		$server_token=$init_params['CIN_MLK']['server_token'];
		$local_token=$init_params['CIN_MLK']['local_token'];
	}

	if(isset($_SESSION['records'])){
    		$records = $_SESSION['records'];
	}
	
	$events = array();
	$fields = array();
	$forms = array();
	
	# an array containing all the elements that must be submitted to the API
	$data = array('content' => 'record','type' => 'flat','format' => 'csv','records' => $records,'events' => $events,'fields' => $fields,'token' =>$local_token );
	
	# create a new API request object for the local machine
	$request_local = new RestCallRequest($init_params['local_ip'], 'POST', $data);		
	# initiate the API request for the data on the local machine
	$request_local->execute();
	#$local_response = $request_local->getResponseInfo();	
	$exportdata = $request_local->getResponseBody(); #data from the local machine
	//print_r($exportdata);	
	# an array containing all the elements that must be submitted to the server API
  	$data = array('content'=>'record','type'=>'flat','format'=>'csv','token'=>$server_token,'data' => $exportdata);
	
	# create a new API request object for the server
	$request_server = new RestCallRequest($init_params['server_ip'], 'POST', $data);

	# initiate the API request to the server
	$request_server->execute();

	$server_response = $request_server -> getResponseInfo();
	
	//print_r($server_response);
	
	$log_message = implode("\n", array_map(function ($v, $k) { return $k . '=' . $v; }, $server_response, array_keys($server_response)));

	# Prepare log folder
	$path = $init_params['log_location'];

	$response_code = $server_response['http_code'];
	
	if ($response_code != '200') {
		//there was an error
		echo json_encode(array("<h2>ERROR!</h2><br/>",return_httpstat($response_code)));
	}else{
		//Success message here
		#Success message here
		$the_date = getdate();
		$month = $the_date['mon'];
		$year = $the_date['year'];
		$day = $the_date['mday'];
		$minutes = $the_date['minutes'];
		$hours = $the_date['hours'];
		$seconds = $the_date['seconds'];	

		$filename = $path."/Sync_Data_Log-".$day."-".$month."-".$year."-".$hours.".".$minutes.".".$seconds.".txt";	

		file_put_contents($filename, $log_message,FILE_APPEND);

		$time = microtime();
		$time = explode(' ', $time);
		$time = $time[1] + $time[0];
		$finish = $time;
		$total_time = round(($finish - $start), 4);

		echo json_encode(array(return_httpstat($response_code),
	        "<h2>Synchronization successful!</h2> Date: ".date("d-m-Y h:i:s A")."< br/>",
		"<p>See Log File in : ".$path."</p>",
    		"<p><a href='index.php'>Go Back</a></p>",
		"Synchronization completed in ".$total_time." seconds."));
	}

?>
